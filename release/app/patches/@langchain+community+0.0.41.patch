diff --git a/node_modules/@langchain/community/dist/embeddings/hf_transformers.cjs b/node_modules/@langchain/community/dist/embeddings/hf_transformers.cjs
index 0e3cf11..b6f75c2 100644
--- a/node_modules/@langchain/community/dist/embeddings/hf_transformers.cjs
+++ b/node_modules/@langchain/community/dist/embeddings/hf_transformers.cjs
@@ -1,7 +1,6 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.HuggingFaceTransformersEmbeddings = void 0;
-const transformers_1 = require("@xenova/transformers");
 const embeddings_1 = require("@langchain/core/embeddings");
 const chunk_array_1 = require("@langchain/core/utils/chunk_array");
 /**
@@ -22,9 +21,12 @@ const chunk_array_1 = require("@langchain/core/utils/chunk_array");
  * console.log({ documentRes });
  * ```
  */
+
+
 class HuggingFaceTransformersEmbeddings extends embeddings_1.Embeddings {
     constructor(fields) {
         super(fields ?? {});
+
         Object.defineProperty(this, "modelName", {
             enumerable: true,
             configurable: true,
@@ -78,8 +80,10 @@ class HuggingFaceTransformersEmbeddings extends embeddings_1.Embeddings {
         ]);
         return data[0];
     }
+
+
     async runEmbedding(texts) {
-        const pipe = await (this.pipelinePromise ??= (0, transformers_1.pipeline)("feature-extraction", this.modelName));
+        const pipe = await (this.pipelinePromise ??= (await import("@xenova/transformers")).pipeline("feature-extraction", this.modelName));
         return this.caller.call(async () => {
             const output = await pipe(texts, { pooling: "mean", normalize: true });
             return output.tolist();
